package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Polarishq/api-client-go/models"
)

// PostLoginOauthTokenReader is a Reader for the PostLoginOauthToken structure.
type PostLoginOauthTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLoginOauthTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostLoginOauthTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostLoginOauthTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostLoginOauthTokenOK creates a PostLoginOauthTokenOK with default headers values
func NewPostLoginOauthTokenOK() *PostLoginOauthTokenOK {
	return &PostLoginOauthTokenOK{}
}

/*PostLoginOauthTokenOK handles this case with default header values.

Token retrieved
*/
type PostLoginOauthTokenOK struct {
	Payload *models.Token
}

func (o *PostLoginOauthTokenOK) Error() string {
	return fmt.Sprintf("[POST /login/oauth/token][%d] postLoginOauthTokenOK  %+v", 200, o.Payload)
}

func (o *PostLoginOauthTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Token)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLoginOauthTokenDefault creates a PostLoginOauthTokenDefault with default headers values
func NewPostLoginOauthTokenDefault(code int) *PostLoginOauthTokenDefault {
	return &PostLoginOauthTokenDefault{
		_statusCode: code,
	}
}

/*PostLoginOauthTokenDefault handles this case with default header values.

Unexpected error
*/
type PostLoginOauthTokenDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post login oauth token default response
func (o *PostLoginOauthTokenDefault) Code() int {
	return o._statusCode
}

func (o *PostLoginOauthTokenDefault) Error() string {
	return fmt.Sprintf("[POST /login/oauth/token][%d] PostLoginOauthToken default  %+v", o._statusCode, o.Payload)
}

func (o *PostLoginOauthTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostLoginOauthTokenBody post login oauth token body
swagger:model PostLoginOauthTokenBody
*/
type PostLoginOauthTokenBody struct {

	// credential grant type
	// Required: true
	GrantType *string `json:"grant_type"`
}

// MarshalBinary interface implementation
func (o *PostLoginOauthTokenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLoginOauthTokenBody) UnmarshalBinary(b []byte) error {
	var res PostLoginOauthTokenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
