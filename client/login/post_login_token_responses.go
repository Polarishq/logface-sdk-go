package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Polarishq/api-client-go/models"
)

// PostLoginTokenReader is a Reader for the PostLoginToken structure.
type PostLoginTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLoginTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostLoginTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostLoginTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostLoginTokenOK creates a PostLoginTokenOK with default headers values
func NewPostLoginTokenOK() *PostLoginTokenOK {
	return &PostLoginTokenOK{}
}

/*PostLoginTokenOK handles this case with default header values.

Returns the new access token
*/
type PostLoginTokenOK struct {
	Payload *models.Token
}

func (o *PostLoginTokenOK) Error() string {
	return fmt.Sprintf("[POST /login/token][%d] postLoginTokenOK  %+v", 200, o.Payload)
}

func (o *PostLoginTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Token)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLoginTokenDefault creates a PostLoginTokenDefault with default headers values
func NewPostLoginTokenDefault(code int) *PostLoginTokenDefault {
	return &PostLoginTokenDefault{
		_statusCode: code,
	}
}

/*PostLoginTokenDefault handles this case with default header values.

Unexpected error
*/
type PostLoginTokenDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post login token default response
func (o *PostLoginTokenDefault) Code() int {
	return o._statusCode
}

func (o *PostLoginTokenDefault) Error() string {
	return fmt.Sprintf("[POST /login/token][%d] PostLoginToken default  %+v", o._statusCode, o.Payload)
}

func (o *PostLoginTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostLoginTokenBody post login token body
swagger:model PostLoginTokenBody
*/
type PostLoginTokenBody struct {

	// the new access token
	// Required: true
	Token *string `json:"token"`
}

// MarshalBinary interface implementation
func (o *PostLoginTokenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLoginTokenBody) UnmarshalBinary(b []byte) error {
	var res PostLoginTokenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
